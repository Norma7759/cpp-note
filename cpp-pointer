指针占用的内存空间：与指针类型无关，和操作系统有关，32位-4位，64位-8位。
空指针：指向地址为0的空间，不可以访问。C++11以后引入了nullptr，多用nullptr。
野指针：指向非法的内存空间。

const
1.const修饰指针：常量指针
const int* p = &a;
指针的指向可以修改，指针指向的值不能修改。

2.const修饰常量：指针常量
int* const p = &a;
指针的指向不能改，指向的值能改。

3.const修饰指针和常量
const int* const p = &a;
都不能改

例:形参前用const修饰指针：防止在函数中修改参数值（常量指针）。

C++引用
引用就是给变量起别名，本质是指针常量
1.引用时必须初始化，否则则成为野指针
2.不能更改引用（即不能更改为另一个变量的别名）
3.使用时自动解引用
type &name = variable;
type* const name = &variable;

使用引用作为形参，可以直接传入实参，但会以地址的方式接受

引用作返回值
1.不要返回局部变量的引用
2.函数可以作为左值

